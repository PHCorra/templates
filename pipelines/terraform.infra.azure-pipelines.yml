jobs:
- job: ValidateAndApply
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      export AZURE_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
      export AZURE_TENANT_ID=$(AZURE_TENANT_ID)
      export AZURE_CLIENT_ID=$(AZURE_CLIENT_ID)
      export AZURE_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
    displayName: Set env vars

  - task: TerraformInstaller@0
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: '$(TERRAFORM_VERSION)'

  - task: TerraformTaskV3@3
    displayName: 'Run terraform init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: '$(ADO_SC_TO_ARM)'
      backendAzureRmResourceGroupName: '$(TERRAFORM_BACKEND_RG)'
      backendAzureRmStorageAccountName: '$(TERRAFORM_BACKEND_SA)'
      backendAzureRmContainerName: '$(TERRAFORM_BACKEND_CONTAINER)'
      backendAzureRmKey: '$(TERRAFORM_BACKEND_KEY)'

  - task: TerraformTaskV3@3
    displayName: 'Run terraform validate'
    inputs:
      provider: 'azurerm'
      command: 'validate'

  - task: TerraformTaskV3@3
    displayName: 'plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      environmentServiceNameAzureRM: '$(ADO_SC_TO_ARM)'

  - task: TerraformTaskV3@3
    displayName: 'apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      commandOptions: '-auto-approve'
      environmentServiceNameAzureRM: '$(ADO_SC_TO_ARM)'
